.catalog:
  name: Drone
  version: 0.4-rancher1
  description: |
    Drone CI Server
  questions:
    - variable: "remote_driver"
      type: "enum"
      required: true
      label: "Remote Driver"
      description: "Remote Git and Auth scheme"
      options:
        - github
        - bitbucket
        - gitlab
        - gogs
    - variable: "remote_config"
      type: "password"
      required: true
      label: "Remote Config"
      description: "Must be the full connection string. see http://readme.drone.io/setup/overview/ for more info"
    - variable: "fqdn"
      label: "LB FQDN"
      description: "App name for FQDN"
      type: "string"
      required: true
      default: "drone"
    - variable: "database_driver"
      type: "enum"
      label: "Database Driver"
      description: "Database backend to use."
      required: true
      default: "sqlite3"
      options:
        - sqlite3
        - postgres
        - mysql
    - variable: "database_config"
      label: "Database Config"
      type: "password"
      required: true
      description: "Must be full db string. The hostname for the DB will be 'database'. See http://readme.drone.io/setup/overview/ for more info"
    - variable: "database_service"
      type: "service"
      label: "Database Service"
      description: "Service to link to for database. For instance if using the default Rancher Galera cluster select galera/galera-lb."
      default: "drone-server"

drone-lb:
  scale: 1
  load_balancer_config:
    haproxy_config: {}
  health_check:
    port: 42
    interval: 2000
    unhealthy_threshold: 3
    healthy_threshold: 2
    response_timeout: 2000

drone-lb-lb:
    scale: 1
    start_on_create: true
    lb_config:
      certs: []
      port_rules:
      - hostname: ${fqdn}
        priority: 1
        protocol: http
        service: drone-lb
        source_port: 8082
        target_port: 8000
    health_check:
      response_timeout: 2000
      healthy_threshold: 2
      port: 42
      unhealthy_threshold: 3
      interval: 2000

drone-server:
  scale: 1
  metadata:
    remote_driver: ${remote_driver}
    remote_config: "${remote_config}"
    database_driver: ${database_driver}
    database_config: "${database_config}"
    http_proxy_on: "false"
    debug: "true"
